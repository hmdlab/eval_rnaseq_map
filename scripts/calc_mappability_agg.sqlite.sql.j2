-- Settings
PRAGMA busy_timeout = 864000000;
PRAGMA cache_size = 48000000;
-- Import data.mode tabs DROP TABLE if EXISTS unaligned_reads;
CREATE TABLE if NOT EXISTS unaligned_reads(id);.import '{{ tsv_unaligned }}' unaligned_reads vacuum;
-- Calculate mappability
attach database '{{ annotation }}' AS ext;
DROP TABLE if EXISTS transcript_mappabilities_work;
CREATE TABLE if NOT EXISTS transcript_mappabilities_work (
  id,
  qname,
  n_true,
  n_false
);
INSERT INTO
  transcript_mappabilities_work
SELECT
  id,
  qname,
  CAST(SUM(TRUE) AS FLOAT) AS n_true,
  CAST(SUM(FALSE) AS FLOAT) AS n_false
FROM
  transcript_alignment_truths
GROUP BY
  id;
INSERT INTO
  transcript_mappabilities_work
SELECT
  id,
  SUBSTR(id, 1, instr(id, '|') -1) AS qname,
  0 AS n_true,
  1 AS n_false
FROM
  unaligned_reads;
DROP TABLE if EXISTS transcript_mappabilities;
CREATE TABLE if NOT EXISTS transcript_mappabilities (
    qname,
    mappability
  );
INSERT INTO
  transcript_mappabilities
SELECT
  qname,
  SUM(pct_true) / COUNT(*) AS mappability
FROM
  (
    SELECT
      qname,
      n_true / (
        n_true + n_false
      ) AS pct_true
    FROM
      transcript_mappabilities_work
  ) t
GROUP BY
  qname;
DROP TABLE if EXISTS gene_mappabilities_work;
CREATE TABLE if NOT EXISTS gene_mappabilities_work (
    id,
    qname,
    n_true,
    n_false
  );
INSERT INTO
  gene_mappabilities_work
SELECT
  id,
  qname,
  CAST(SUM(TRUE) AS FLOAT) AS n_true,
  CAST(SUM(FALSE) AS FLOAT) AS n_false
FROM
  gene_alignment_truths
GROUP BY
  id;
INSERT INTO
  gene_mappabilities_work
SELECT
  id,
  an.gene_id AS qname,
  0 AS n_true,
  1 AS n_false
FROM
  unaligned_reads ur
  LEFT JOIN (
    SELECT
      DISTINCT transcript_id,
      gene_id
    FROM
      ext.annotations
    WHERE
      feature = 'exon'
  ) an
  ON SUBSTR(ur.id, 1, instr(ur.id, '|') -1) = an.transcript_id;
DROP TABLE if EXISTS gene_mappabilities;
CREATE TABLE if NOT EXISTS gene_mappabilities (
    qname,
    mappability
  );
INSERT INTO
  gene_mappabilities
SELECT
  qname,
  SUM(pct_true) / COUNT(*) AS mappability
FROM
  (
    SELECT
      qname,
      n_true / (
        n_true + n_false
      ) AS pct_true
    FROM
      gene_mappabilities_work
  ) t
GROUP BY
  qname;
-- Drop data tables
  DROP TABLE if EXISTS transcript_mappabilities_work;
DROP TABLE if EXISTS gene_mappabilities_work;
vacuum;
